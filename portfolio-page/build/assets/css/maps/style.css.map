{"version":3,"sources":["style.css","style.scss","mixins/_mixins-master.scss","typography/_typography.scss","mixins/_typography.scss","common/_svgsprite.scss","variables-site/_variables-site.scss","site/_site.scss","layout/_setup.scss","layout/_global.scss","site/blocks/_socials.scss","site/blocks/_triangle.scss","site/blocks/_title.scss","site/blocks/_subtitle.scss","site/blocks/_user.scss","site/blocks/_hamburger.scss","site/blocks/_user-about.scss","site/blocks/_about-user-info.scss","site/blocks/_about-data.scss","site/blocks/_skills.scss","site/blocks/_skill-section.scss","site/blocks/_skill.scss","site/blocks/_quote.scss","site/blocks/_navigation.scss","site/blocks/_contacts.scss","site/hero/_hero.scss","site/hero/_section-title.scss","site/hero/_down-arrow.scss","site/about/_about.scss","../../node_modules/singularitygs/stylesheets/singularitygs/helpers/_background-grid.scss","../../node_modules/singularitygs/stylesheets/singularitygs/_api.scss","../../node_modules/singularitygs/stylesheets/singularitygs/math/_columns.scss","../../node_modules/singularitygs/stylesheets/singularitygs/api/_isolation.scss","../../node_modules/singularitygs/stylesheets/singularitygs/helpers/_directions.scss","site/map/_map.scss","site/footer/footer.scss"],"names":[],"mappings":"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","file":"../style.css","sourcesContent":["@charset \"UTF-8\";\n/*--------------------------------------------------------------\n>>> TABLE OF CONTENTS:\n----------------------------------------------------------------\n# Normalize\n# Typography\n# Elements\n# Forms\n# Navigation\n  ## Links\n  ## Menus\n# Accessibility\n# Alignments\n# Clearings\n# Widgets\n# Content\n  ## Posts and pages\n  ## Comments\n# Infinite scroll\n# Media\n  ## Captions\n  ## Galleries\n--------------------------------------------------------------*/\n/*--------------------------------------------------------------\n# Global imports\n--------------------------------------------------------------*/\n/*\r\nclearfix миксин-плейсхолдер\r\n(scss-placeholder'ы используются вместо миксинов\r\nкогда нет параметров (занимают меньше места чем миксины в коде))\r\n*/\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,300i,400,500,500i&amp;subset=cyrillic\" rel=\"stylesheet\"');\n.about:after {\n  content: \"\";\n  display: block;\n  clear: both; }\n\n/*\r\ncenter element\r\n*/\n/*\r\nFill element\r\n*/\n/*\r\nSizes for element\r\n*/\n/*\r\ninline-block\r\n*/\n/*\r\nshadow\r\n*/\n/*\r\nadaptive media\r\n*/\n/*\r\ncols(n=3, m=10)\r\nmargin-right m px\r\nwidth ((100% - (((@margin-right * n) / wrapper-width) * 100%)) / n)\r\n&:last-child\r\nmargin-right 0px\r\n\r\n// Fonts mixin\r\nfont-url(file)\r\nreturn '../fonts/' + file\r\n\r\nwebfont(family, file, hack-chrome-windows = false, weight = 'normal')\r\n@font-face\r\nfont-family family\r\nsrc url(font-url(file + '.eot'))\r\nsrc url(font-url(file + '.eot?#iefix')) format('embedded-opentype'),\r\nurl(font-url(file + '.woff')) format('woff'),\r\nurl(font-url(file + '.ttf')) format('truetype'),\r\nurl(font-url(file + '.svg#'+ family)) format('svg')\r\nfont-weight weight\r\nfont-style normal\r\nif hack-chrome-windows\r\n@media screen and (-webkit-min-device-pixel-ratio:0)\r\n@font-face\r\nfont-family family\r\nsrc url(font-url(file + '.svg#'+ family)) format('svg')\r\n*/\n/*\r\nfont-size\r\nзадает размер шрифта в rem или px если нет поддержки.\r\nдля body задан - 0.8 т.е. 16px и 1rem\r\n*/\n/*шаблон по которому формирются стили для svg иконок*/\n.icon {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  fill: currentColor; }\n\n.icon-about_bg_left {\n  font-size: 101.3986rem;\n  width: 0.88759em; }\n\n.icon-about_bg_right {\n  font-size: 100.9986rem;\n  width: 0.89143em; }\n\n.icon-about_header {\n  font-size: 17.544rem;\n  width: 2.83949em; }\n\n.icon-arrow_down {\n  font-size: 1.6164rem;\n  width: 1.55778em; }\n\n.icon-bg {\n  font-size: 35.469rem;\n  width: 5.63873em; }\n\n.icon-blog_header {\n  font-size: 20.8012rem;\n  width: 1.45277em; }\n\n.icon-check {\n  font-size: 1.3922rem;\n  width: 1.3047em; }\n\n.icon-envelope {\n  font-size: 1.7295rem;\n  width: 1.27274em; }\n\n.icon-envelope2 {\n  font-size: 1.6391rem;\n  width: 1.40321em; }\n\n.icon-envelope_n {\n  font-size: 4.5rem;\n  width: 1em; }\n\n.icon-github {\n  font-size: 2.2rem;\n  width: 1.18182em; }\n\n.icon-github_round {\n  font-size: 5rem;\n  width: 1em; }\n\n.icon-hamburger {\n  font-size: 3.5rem;\n  width: 1.14286em; }\n\n.icon-in {\n  font-size: 2.2938rem;\n  width: 1.0463em; }\n\n.icon-in_round {\n  font-size: 5rem;\n  width: 1em; }\n\n.icon-link {\n  font-size: 1.9125rem;\n  width: 1em; }\n\n.icon-login {\n  font-size: 1.5422rem;\n  width: 0.91668em; }\n\n.icon-map_marker {\n  font-size: 2.1654rem;\n  width: 0.69969em; }\n\n.icon-map_n {\n  font-size: 4.5rem;\n  width: 1em; }\n\n.icon-password {\n  font-size: 1.5984rem;\n  width: 1.05712em; }\n\n.icon-phone {\n  font-size: 1.8863rem;\n  width: 1.00005em; }\n\n.icon-phone2 {\n  font-size: 2.0947rem;\n  width: 0.78732em; }\n\n.icon-phone_n {\n  font-size: 4.5rem;\n  width: 1em; }\n\n.icon-portf_arrow_down {\n  font-size: 2.7435rem;\n  width: 1.55772em; }\n\n.icon-portf_arrow_up {\n  font-size: 2.7435rem;\n  width: 1.55772em; }\n\n.icon-portfolio_header {\n  font-size: 31.3961rem;\n  width: 3.74408em; }\n\n.icon-skype {\n  font-size: 2.4rem;\n  width: 1em; }\n\n.icon-skype_n {\n  font-size: 60rem;\n  width: 1em; }\n\n.icon-stars1 {\n  font-size: 11.0966rem;\n  width: 1.68395em; }\n\n.icon-stars2 {\n  font-size: 13.25rem;\n  width: 1.29434em; }\n\n.icon-stars3 {\n  font-size: 12.403rem;\n  width: 0.83069em; }\n\n.icon-telegram_logo {\n  font-size: 23.8892rem;\n  width: 1em; }\n\n.icon-vk {\n  font-size: 1.7123rem;\n  width: 1.75267em; }\n\n.icon-vk_round {\n  font-size: 5rem;\n  width: 1em; }\n\n.icon-works_header {\n  font-size: 16.5036rem;\n  width: 3.06055em; }\n\n/*--------------------------------------------------------------\n# Typography\n--------------------------------------------------------------*/\n@font-face {\n  font-family: 'bernier';\n  src: url(\"../../fonts/BERNIERRegular-Regular.otf\");\n  font-weight: normal;\n  font-style: normal; }\n\n@font-face {\n  font-family: 'Sansus Webissimo Regular';\n  src: url(\"../../fonts/SansusWebissimo.eot\");\n  src: url(\"../../fonts/SansusWebissimo.eot?#iefix\") format(\"embedded-opentype\"), url(\"../../fonts/SansusWebissimo.woff\") format(\"woff\"), url(\"../../fonts/SansusWebissimo.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal; }\n\nbody {\n  -webkit-font-smoothing: antialiased; }\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n  color: #373e42;\n  font-family: \"Roboto\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Geneva, Arial, sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  font-size: 1rem;\n  line-height: 1.6; }\n\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 12px;\n  font-family: \"Roboto\", \"Lucida Grande\", \"Lucida Sans Unicode\", \"Lucida Sans\", Geneva, Arial, sans-serif;\n  margin-bottom: 4px;\n  clear: both;\n  font-weight: 400; }\n\nh1 {\n  font-size: 48px; }\n\nh2 {\n  font-size: 41px; }\n\nh3 {\n  font-size: 35px; }\n\nh4 {\n  font-size: 32px; }\n\nh5 {\n  font-size: 28px; }\n\nh6 {\n  font-size: 25px; }\n\n/*--------------------------------------------------------------\n# Content\n--------------------------------------------------------------*/\n/*--------------------------------------------------------------\r\n## Setup\r\n--------------------------------------------------------------*/\nhtml {\n  height: 100%;\n  font-size: 16px; }\n  @media only screen and (max-width: 992px) {\n    html {\n      font-size: 15px; } }\n  @media only screen and (max-width: 768px) {\n    html {\n      font-size: 14px; } }\n  @media only screen and (max-width: 480px) {\n    html {\n      font-size: 13px; } }\n\nbody {\n  height: 100%;\n  margin: 0; }\n\n* {\n  box-sizing: border-box; }\n\nh1, h2, h3, h4, h5 {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-weight: normal; }\n\nul {\n  padding: 0;\n  margin: 0;\n  list-style: none; }\n\np {\n  margin: 0; }\n\n/*--------------------------------------------------------------\r\n## Layout\r\n--------------------------------------------------------------*/\n.wrapper {\n  min-height: 100%;\n  position: relative;\n  overflow: hidden; }\n\n/*--------------------------------------------------------------\r\n## Blocks\r\n--------------------------------------------------------------*/\n.socials {\n  font-size: 16px;\n  font-size: 1rem;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap; }\n  .socials__item {\n    display: inline-block;\n    margin-right: 1.750em; }\n  .socials__link {\n    color: rgba(255, 255, 255, 0.8); }\n    .socials__link:active,\n    .socials__link :hover {\n      color: white; }\n\n.icon {\n  transition: color .3s ease-out; }\n  .icon-vk {\n    font-size: 18px; }\n  .icon-github {\n    font-size: 22px; }\n  .icon-in {\n    font-size: 20px; }\n\n.triangle {\n  width: 100%;\n  height: 100px; }\n  .triangle_fill_white {\n    fill: #efeee9; }\n  .triangle_fill_beige {\n    fill: #eeebdf; }\n\n.title {\n  color: #373e42;\n  font-family: 'Sansus Webissimo Regular';\n  font-size: 63px;\n  font-size: 3.9375rem;\n  text-transform: uppercase;\n  line-height: 1;\n  padding: .75em 1.333em;\n  display: inline-block;\n  position: relative;\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat; }\n  @media only screen and (max-width: 480px) {\n    .title {\n      font-size: 32px;\n      font-size: 2rem; } }\n  .title:after, .title:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background-color: rgba(55, 62, 66, 0.3);\n    width: 0.367em;\n    height: 0.083em; }\n  .title:after {\n    right: 0.667em; }\n  .title:before {\n    left: 0.667em; }\n\n.subtitle {\n  color: #373e42;\n  font-family: 'Sansus Webissimo Regular';\n  font-size: 35px;\n  font-size: 2.1875rem;\n  text-transform: uppercase;\n  line-height: 1;\n  padding: .5em 1.333em;\n  display: inline-block;\n  position: relative;\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat; }\n  @media only screen and (max-width: 480px) {\n    .subtitle {\n      font-size: 32px;\n      font-size: 2rem; } }\n  .subtitle:after, .subtitle:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background-color: rgba(55, 62, 66, 0.3);\n    width: 0.367em;\n    height: 0.083em; }\n  .subtitle:after {\n    right: 0.667em; }\n  .subtitle:before {\n    left: 0.667em; }\n\n.user {\n  color: #efeee9; }\n  .user__photo {\n    margin-bottom: 10px; }\n  .user__name {\n    font-size: 35px;\n    font-size: 2.1875rem;\n    line-height: 1;\n    font-weight: 500;\n    margin-bottom: 10px; }\n  .user__description {\n    line-height: 1;\n    font-weight: 400; }\n\n.hamburger {\n  color: rgba(239, 238, 233, 0.8);\n  position: absolute;\n  top: 2.063em;\n  right: 1.875em; }\n  .hamburger:active,\n  .hamburger :hover {\n    color: white; }\n\n.icon-hamburger {\n  font-size: 35px; }\n\n.user-about {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n  position: relative;\n  margin-bottom: 30px; }\n  .user-about__picture {\n    display: flex;\n    justify-content: center;\n    max-height: 390px;\n    overflow: hidden;\n    margin-bottom: 40px; }\n  .user-about__photo-img {\n    display: block;\n    width: 445px;\n    height: 460px; }\n  .user-about__title {\n    display: flex;\n    justify-content: center; }\n  .user-about__text {\n    margin: 0 auto;\n    max-width: 445px; }\n\n.about-user-info__title {\n  text-align: center;\n  width: 350px;\n  margin: 0 auto; }\n\n.about-user-info__text {\n  margin-top: 40px; }\n\n.about-data {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: row; }\n  .about-data__description {\n    margin-bottom: 40px;\n    width: 90%; }\n  .about-data__content {\n    width: 90%; }\n\n.skills {\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column; }\n  .skills__item {\n    margin-bottom: 40px; }\n\n.skill-section__list {\n  margin-left: -35px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap; }\n\n.skill-section__item {\n  margin-top: 20px;\n  margin-left: 35px;\n  position: relative;\n  width: 110px;\n  height: 110px; }\n\n.skill-section__title {\n  font-size: 28px;\n  font-size: 1.75rem;\n  font-weight: 500;\n  line-height: 1; }\n\n.skill__circle {\n  position: relative; }\n\n.skill__name {\n  position: absolute;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%); }\n\n.skill__layer {\n  fill: none;\n  stroke: #74a163;\n  stroke-width: 19; }\n\n.skill__sector {\n  transform-origin: center;\n  transform: rotate(-90deg);\n  transition: all 1s;\n  fill: none;\n  stroke: #efeee9;\n  stroke-dasharray: 20 301;\n  stroke-width: 21; }\n\n.quote {\n  font-style: italic;\n  padding: 0;\n  margin: 0; }\n  .quote_style_bold {\n    font-weight: 500; }\n\n.navigation {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap; }\n  .navigation__item {\n    margin-right: 20px; }\n    .navigation__item:last-child {\n      margin-right: 0px; }\n  .navigation__link {\n    color: #efeee9;\n    font-weight: 400;\n    text-decoration: none; }\n    .navigation__link :active,\n    .navigation__link :hover {\n      color: #efeee9; }\n\n.contacts {\n  padding: 10px 40px 35px 35px;\n  text-align: center;\n  background-color: rgba(239, 238, 233, 0.85);\n  width: 380px;\n  height: 310px;\n  border-radius: 10px; }\n  .contacts__title {\n    margin-bottom: 20px; }\n  .contacts__item {\n    position: relative;\n    margin: 20px 0; }\n  .contacts__text {\n    font-weight: 500;\n    padding-left: 35px;\n    text-align: left; }\n  .contacts__icon {\n    color: #74a163;\n    position: absolute;\n    top: 1px;\n    left: 0;\n    width: 30px;\n    height: 30px; }\n\n.icon-skype {\n  font-size: 25px; }\n\n.icon-envelope {\n  font-size: 20px; }\n\n.icon-phone {\n  font-size: 20px; }\n\n.icon-map_marker {\n  font-size: 21px; }\n\n/*--------------------------------------------------------------\r\n## Hero\r\n--------------------------------------------------------------*/\n.hero {\n  height: 600px;\n  overflow: hidden;\n  position: relative; }\n  .hero__img-bg {\n    width: 100%;\n    min-height: 880px;\n    min-width: 1800px; }\n  .hero__socials {\n    position: absolute;\n    top: 2.063em;\n    left: 1.875em; }\n  .hero__title {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    top: 45%;\n    text-align: center;\n    width: 100%; }\n  .hero__user-block {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%); }\n\n.section-title {\n  display: inline-block; }\n\n.down-arrow {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 60px;\n  font-size: 18px;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all .5s ease-in-out;\n  z-index: 1; }\n  .down-arrow:active,\n  .down-arrow :hover {\n    color: white; }\n\n.icon-arrow_down {\n  font-size: 18px; }\n\n/*--------------------------------------------------------------\r\n## About\r\n--------------------------------------------------------------*/\n.about {\n  background-image: url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww%2Ew3%2Eorg%2F2000%2Fsvg%22%3E%3Crect%20x%3D%220%25%22%20fill%3D%22%234040ff%22%20width%3D%221%2E04167%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%221%2E04167%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%227%2E29167%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%229%2E375%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2215%2E625%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2217%2E70833%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2223%2E95833%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2226%2E04167%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2232%2E29167%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2234%2E375%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2240%2E625%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2242%2E70833%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2248%2E95833%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2251%2E04167%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2257%2E29167%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2259%2E375%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2265%2E625%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2267%2E70833%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2273%2E95833%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2276%2E04167%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2282%2E29167%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2284%2E375%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2290%2E625%25%22%20fill%3D%22%234040ff%22%20width%3D%222%2E08333%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2292%2E70833%25%22%20fill%3D%22blue%22%20width%3D%226%2E25%25%22%20height%3D%22100%25%22%2F%3E%3Crect%20x%3D%2298%2E95833%25%22%20fill%3D%22%234040ff%22%20width%3D%221%2E04167%25%22%20height%3D%22100%25%22%2F%3E%3C%2Fsvg%3E\");\n  background: #efeee9; }\n  .about__left {\n    position: relative;\n    -sgs-span-settings: (\"span\": 6, \"location\": 1, \"grid\": 12, \"gutter\": 0.33333, \"style\": \"fixed\", \"start row\": true, \"end row\": false, \"fixed gutter\": true, \"split gutter\": null, \"gutter property\": \"padding\", \"options\": (null: null));\n    width: 50%;\n    float: left;\n    margin-right: -100%;\n    clear: none;\n    padding-right: 0.33333; }\n  .about__right {\n    position: relative;\n    -sgs-span-settings: (\"span\": 6, \"location\": 7, \"grid\": 12, \"gutter\": 0.33333, \"style\": \"fixed\", \"start row\": false, \"end row\": true, \"fixed gutter\": true, \"split gutter\": null, \"gutter property\": \"padding\", \"options\": (null: null));\n    width: 50%;\n    float: right;\n    margin-left: 0;\n    margin-right: 0;\n    clear: none;\n    padding-right: 0; }\n  .about__left {\n    background: #efeee9; }\n  .about__section-title {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    position: relative;\n    top: -35px; }\n  .about__right {\n    background: #eeebdf; }\n  .about__triangles {\n    position: absolute;\n    bottom: 100%; }\n\n/*--------------------------------------------------------------\r\n## Map\r\n--------------------------------------------------------------*/\n.map {\n  position: relative; }\n  .map__contacts {\n    z-index: 999;\n    position: absolute;\n    top: 39%;\n    left: 50%;\n    transform: translate(-50%, -50%); }\n  .map__box {\n    height: 960px; }\n\n/*--------------------------------------------------------------\r\n## Footer\r\n--------------------------------------------------------------*/\n.footer {\n  position: absolute;\n  bottom: 0;\n  color: #aaadaf;\n  font-weight: 300; }\n  .footer__top {\n    min-height: 150px;\n    display: flex;\n    justify-content: center;\n    background-color: rgba(83, 89, 92, 0.85); }\n  .footer__block {\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    padding: 28px 28px;\n    width: 33.33%; }\n    .footer__block:nth-child(2):after {\n      position: absolute;\n      top: 25px;\n      left: 0;\n      content: \"\";\n      display: block;\n      width: 1px;\n      height: 100px;\n      background-color: rgba(170, 173, 175, 0.85); }\n    .footer__block:nth-child(2):before {\n      position: absolute;\n      top: 25px;\n      right: 0;\n      content: \"\";\n      display: block;\n      width: 1px;\n      height: 100px;\n      background-color: rgba(170, 173, 175, 0.85); }\n  .footer__socials {\n    color: #aaadaf;\n    margin-top: 25px; }\n  .footer__bottom {\n    color: #efeee9;\n    display: flex;\n    line-height: 1;\n    padding: 10px 0;\n    justify-content: center;\n    background-color: rgba(116, 161, 99, 0.85); }\n","/*--------------------------------------------------------------\n>>> TABLE OF CONTENTS:\n----------------------------------------------------------------\n# Normalize\n# Typography\n# Elements\n# Forms\n# Navigation\n  ## Links\n  ## Menus\n# Accessibility\n# Alignments\n# Clearings\n# Widgets\n# Content\n  ## Posts and pages\n  ## Comments\n# Infinite scroll\n# Media\n  ## Captions\n  ## Galleries\n--------------------------------------------------------------*/\n\n/*--------------------------------------------------------------\n# Global imports\n--------------------------------------------------------------*/\n@import './../../node_modules/singularitygs/stylesheets/_singularitygs.scss';\n@import 'mixins/mixins-master';\n@import 'mixins/typography';\n@import 'variables-site/variables-site';\n@import 'common/svgsprite';\n\n/*--------------------------------------------------------------\n# Typography\n--------------------------------------------------------------*/\n@import 'typography/typography';\n\n/*--------------------------------------------------------------\n# Content\n--------------------------------------------------------------*/\n@import \"site/site\";","/*\r\nclearfix миксин-плейсхолдер\r\n(scss-placeholder'ы используются вместо миксинов\r\nкогда нет параметров (занимают меньше места чем миксины в коде))\r\n*/\r\n%clearfix {\r\n  &:after{\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n/*\r\ncenter element\r\n*/\r\n@mixin centered($axis: 'both') {\r\n  position: absolute;\r\n  @if $axis == 'both' {\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  } @else if $axis == 'x' {\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  } @else if $axis == 'y' {\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n}\r\n\r\n/*\r\nFill element\r\n*/\r\n@mixin fill($color:red) {\r\n  background-color: $color;\r\n}\r\n\r\n/*\r\nSizes for element\r\n*/\r\n\r\n@mixin size($w:100%, $h:auto) {\r\n  width: $w;\r\n  height: $h;\r\n}\r\n\r\n/*\r\ninline-block\r\n*/\r\n@mixin inline() {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\nshadow\r\n*/\r\n@mixin shadow() {\r\n  box-shadow: 0 10px 15px rgba(#000,0.4);\r\n}\r\n\r\n/*\r\nadaptive media\r\n*/\r\n\r\n@mixin adaptive($point) {\r\n  @if $point == smart {\r\n    @media only screen and (max-width: 480px) { @content; }\r\n  }\r\n  @else if $point == tablet {\r\n    @media only screen and (max-width: 768px) { @content; }\r\n  }\r\n  @else if $point == laptop {\r\n    @media only screen and (max-width: 992px) { @content; }\r\n  }\r\n  @else if $point == pc {\r\n    @media only screen and (max-width: 1200px)  { @content; }\r\n  }\r\n}\r\n\r\n/*\r\ncols(n=3, m=10)\r\nmargin-right m px\r\nwidth ((100% - (((@margin-right * n) / wrapper-width) * 100%)) / n)\r\n&:last-child\r\nmargin-right 0px\r\n\r\n// Fonts mixin\r\nfont-url(file)\r\nreturn '../fonts/' + file\r\n\r\nwebfont(family, file, hack-chrome-windows = false, weight = 'normal')\r\n@font-face\r\nfont-family family\r\nsrc url(font-url(file + '.eot'))\r\nsrc url(font-url(file + '.eot?#iefix')) format('embedded-opentype'),\r\nurl(font-url(file + '.woff')) format('woff'),\r\nurl(font-url(file + '.ttf')) format('truetype'),\r\nurl(font-url(file + '.svg#'+ family)) format('svg')\r\nfont-weight weight\r\nfont-style normal\r\nif hack-chrome-windows\r\n@media screen and (-webkit-min-device-pixel-ratio:0)\r\n@font-face\r\nfont-family family\r\nsrc url(font-url(file + '.svg#'+ family)) format('svg')\r\n*/","@import url('https://fonts.googleapis.com/css?family=Roboto:300,300i,400,500,500i&amp;subset=cyrillic\" rel=\"stylesheet\"');\r\n\r\n@font-face {\r\n  font-family: 'bernier';\r\n  src: url('../../fonts/BERNIERRegular-Regular.otf');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Sansus Webissimo Regular';\r\n  src: url('../../fonts/SansusWebissimo.eot');\r\n  src: url('../../fonts/SansusWebissimo.eot?#iefix') format('embedded-opentype'),\r\n  url('../../fonts/SansusWebissimo.woff') format('woff'),\r\n  url('../../fonts/SansusWebissimo.ttf') format('truetype');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\n\r\nbody {\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nbody,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n  color: $main-font-color;\r\n  font-family: $main-font-roboto;\r\n  font-weight: 400;\r\n  @include font-size(0.8); // 16px\r\n  line-height: $font__line-height-body;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-top: 12px;\r\n  font-family: $main-font-roboto;\r\n  margin-bottom: 4px;\r\n  clear: both;\r\n  font-weight: 400;\r\n}\r\n\r\nh1 {\r\n  font-size: 48px;\r\n}\r\n\r\nh2 {\r\n  font-size: 41px;\r\n}\r\n\r\nh3 {\r\n  font-size: 35px;\r\n}\r\n\r\nh4 {\r\n  font-size: 32px;\r\n}\r\n\r\nh5 {\r\n  font-size: 28px;\r\n}\r\n\r\nh6 {\r\n  font-size: 25px;\r\n}","/*\r\nfont-size\r\nзадает размер шрифта в rem или px если нет поддержки.\r\nдля body задан - 0.8 т.е. 16px и 1rem\r\n*/\r\n@mixin font-size($sizeValue: 1) {\r\n  font-size: ($sizeValue * 20) * 1px;\r\n  font-size: $sizeValue * 1.25rem;\r\n}\r\n\r\n@mixin bernier() {\r\n  font-family: 'bernier';\r\n}\r\n\r\n@mixin sansus() {\r\n  font-family: 'Sansus Webissimo Regular';\r\n}","/*шаблон по которому формирются стили для svg иконок*/\r\n.icon {\r\n\tdisplay: inline-block;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\tfill: currentColor;\r\n}\r\n\r\n.icon-about_bg_left {\r\n\tfont-size:(1013.986/10)*1rem;\r\n\twidth:(900.006/1013.986)*1em;\r\n}\r\n.icon-about_bg_right {\r\n\tfont-size:(1009.986/10)*1rem;\r\n\twidth:(900.331/1009.986)*1em;\r\n}\r\n.icon-about_header {\r\n\tfont-size:(175.44/10)*1rem;\r\n\twidth:(498.161/175.44)*1em;\r\n}\r\n.icon-arrow_down {\r\n\tfont-size:(16.164/10)*1rem;\r\n\twidth:(25.18/16.164)*1em;\r\n}\r\n.icon-bg {\r\n\tfont-size:(354.69/10)*1rem;\r\n\twidth:(2000/354.69)*1em;\r\n}\r\n.icon-blog_header {\r\n\tfont-size:(208.012/10)*1rem;\r\n\twidth:(302.193/208.012)*1em;\r\n}\r\n.icon-check {\r\n\tfont-size:(13.922/10)*1rem;\r\n\twidth:(18.164/13.922)*1em;\r\n}\r\n.icon-envelope {\r\n\tfont-size:(17.295/10)*1rem;\r\n\twidth:(22.012/17.295)*1em;\r\n}\r\n.icon-envelope2 {\r\n\tfont-size:(16.391/10)*1rem;\r\n\twidth:(23/16.391)*1em;\r\n}\r\n.icon-envelope_n {\r\n\tfont-size:(45/10)*1rem;\r\n\twidth:(45/45)*1em;\r\n}\r\n.icon-github {\r\n\tfont-size:(22/10)*1rem;\r\n\twidth:(26/22)*1em;\r\n}\r\n.icon-github_round {\r\n\tfont-size:(50/10)*1rem;\r\n\twidth:(50/50)*1em;\r\n}\r\n.icon-hamburger {\r\n\tfont-size:(35/10)*1rem;\r\n\twidth:(40/35)*1em;\r\n}\r\n.icon-in {\r\n\tfont-size:(22.938/10)*1rem;\r\n\twidth:(24/22.938)*1em;\r\n}\r\n.icon-in_round {\r\n\tfont-size:(50/10)*1rem;\r\n\twidth:(50/50)*1em;\r\n}\r\n.icon-link {\r\n\tfont-size:(19.125/10)*1rem;\r\n\twidth:(19.125/19.125)*1em;\r\n}\r\n.icon-login {\r\n\tfont-size:(15.422/10)*1rem;\r\n\twidth:(14.137/15.422)*1em;\r\n}\r\n.icon-map_marker {\r\n\tfont-size:(21.654/10)*1rem;\r\n\twidth:(15.151/21.654)*1em;\r\n}\r\n.icon-map_n {\r\n\tfont-size:(45/10)*1rem;\r\n\twidth:(45/45)*1em;\r\n}\r\n.icon-password {\r\n\tfont-size:(15.984/10)*1rem;\r\n\twidth:(16.897/15.984)*1em;\r\n}\r\n.icon-phone {\r\n\tfont-size:(18.863/10)*1rem;\r\n\twidth:(18.864/18.863)*1em;\r\n}\r\n.icon-phone2 {\r\n\tfont-size:(20.947/10)*1rem;\r\n\twidth:(16.492/20.947)*1em;\r\n}\r\n.icon-phone_n {\r\n\tfont-size:(45/10)*1rem;\r\n\twidth:(45/45)*1em;\r\n}\r\n.icon-portf_arrow_down {\r\n\tfont-size:(27.435/10)*1rem;\r\n\twidth:(42.736/27.435)*1em;\r\n}\r\n.icon-portf_arrow_up {\r\n\tfont-size:(27.435/10)*1rem;\r\n\twidth:(42.736/27.435)*1em;\r\n}\r\n.icon-portfolio_header {\r\n\tfont-size:(313.961/10)*1rem;\r\n\twidth:(1175.495/313.961)*1em;\r\n}\r\n.icon-skype {\r\n\tfont-size:(24/10)*1rem;\r\n\twidth:(24/24)*1em;\r\n}\r\n.icon-skype_n {\r\n\tfont-size:(600/10)*1rem;\r\n\twidth:(600/600)*1em;\r\n}\r\n.icon-stars1 {\r\n\tfont-size:(110.966/10)*1rem;\r\n\twidth:(186.861/110.966)*1em;\r\n}\r\n.icon-stars2 {\r\n\tfont-size:(132.5/10)*1rem;\r\n\twidth:(171.5/132.5)*1em;\r\n}\r\n.icon-stars3 {\r\n\tfont-size:(124.03/10)*1rem;\r\n\twidth:(103.03/124.03)*1em;\r\n}\r\n.icon-telegram_logo {\r\n\tfont-size:(238.892/10)*1rem;\r\n\twidth:(238.892/238.892)*1em;\r\n}\r\n.icon-vk {\r\n\tfont-size:(17.123/10)*1rem;\r\n\twidth:(30.011/17.123)*1em;\r\n}\r\n.icon-vk_round {\r\n\tfont-size:(50/10)*1rem;\r\n\twidth:(50/50)*1em;\r\n}\r\n.icon-works_header {\r\n\tfont-size:(165.036/10)*1rem;\r\n\twidth:(505.101/165.036)*1em;\r\n}\r\n","$white: #efeee9;\r\n$beige: #eeebdf;\r\n$green: #74a163;\r\n$black: #53595c;\r\n$gray: #aaadaf;\r\n$main-font-color: #373e42;\r\n\r\n$main-font-roboto: 'Roboto',\"Lucida Grande\",\"Lucida Sans Unicode\",\"Lucida Sans\",Geneva,Arial,sans-serif;;\r\n\r\n$font__line-height-body: 1.6;","/*--------------------------------------------------------------\r\n## Setup\r\n--------------------------------------------------------------*/\r\n@import \"../layout/setup.scss\";\r\n\r\n/*--------------------------------------------------------------\r\n## Layout\r\n--------------------------------------------------------------*/\r\n@import \"../layout/global.scss\";\r\n\r\n/*--------------------------------------------------------------\r\n## Blocks\r\n--------------------------------------------------------------*/\r\n@import \"blocks/_socials\";\r\n@import \"blocks/_triangle\";\r\n@import \"blocks/_title\";\r\n@import \"blocks/_subtitle\";\r\n@import \"blocks/_user\";\r\n@import \"blocks/_hamburger\";\r\n@import \"blocks/_user-about\";\r\n@import \"blocks/_about-user-info\";\r\n@import \"blocks/_about-data\";\r\n@import \"blocks/_skills\";\r\n@import \"blocks/_skill-section\";\r\n@import \"blocks/_skill\";\r\n@import \"blocks/_quote\";\r\n@import \"blocks/_navigation\";\r\n@import \"blocks/_contacts\";\r\n\r\n/*--------------------------------------------------------------\r\n## Hero\r\n--------------------------------------------------------------*/\r\n@import \"hero/_hero\";\r\n@import \"hero/_section-title\";\r\n@import \"hero/_down-arrow\";\r\n\r\n/*--------------------------------------------------------------\r\n## About\r\n--------------------------------------------------------------*/\r\n@import \"about/_about\";\r\n\r\n/*--------------------------------------------------------------\r\n## Map\r\n--------------------------------------------------------------*/\r\n@import \"map/_map\";\r\n\r\n/*--------------------------------------------------------------\r\n## Footer\r\n--------------------------------------------------------------*/\r\n@import \"footer/footer\";","@include add-grid(12);\r\n@include add-gutter(1/3);\r\n@include add-gutter-style('split');\r\n\r\nhtml {\r\n  height: 100%;\r\n  font-size: 16px;\r\n  @include adaptive('laptop') {\r\n    font-size: 15px;\r\n  }\r\n  @include adaptive('tablet') {\r\n    font-size: 14px;\r\n  }\r\n  @include adaptive('smart') {\r\n    font-size: 13px;\r\n  }\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}",".wrapper {\r\n  min-height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n}",".socials {\r\n    @include font-size(.8);\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &__item {\r\n        display: inline-block;\r\n        margin-right: 1.750em;\r\n    }\r\n    &__link {\r\n        color: rgba(255,255,255,.8);\r\n        &:active,\r\n         :hover {\r\n            color: rgba(255,255,255,1);\r\n         }\r\n    }\r\n}\r\n\r\n.icon {\r\n    transition: color .3s ease-out;\r\n    &-vk {\r\n        font-size: 18px;\r\n    }\r\n    &-github {\r\n        font-size: 22px;\r\n    }\r\n    &-in {\r\n        font-size: 20px;\r\n    }\r\n}",".triangle {\r\n  width: 100%;\r\n  height: 100px;\r\n  &_fill{\r\n    &_white{\r\n      fill: $white;\r\n    }\r\n    &_beige{\r\n      fill: $beige;\r\n    }\r\n  }\r\n}",".title {\r\n  color: $main-font-color;\r\n  @include sansus();\r\n  @include font-size(3.15); //60px\r\n  text-transform: uppercase;\r\n  line-height: 1;\r\n  padding: .75em 1.333em;\r\n  display: inline-block;\r\n  position: relative;\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  @include adaptive(smart) {\r\n    @include font-size(1.6);\r\n  }\r\n\r\n  $margin: .667em;\r\n\r\n  &:after, &:before {\r\n    content:\"\";\r\n    display: block;\r\n    @include centered('y');\r\n    background-color: rgba($main-font-color, 0.3);\r\n    width: 0.367em;\r\n    height: 0.083em;\r\n  }\r\n  &:after {\r\n    right: $margin;\r\n  }\r\n  &:before {\r\n    left: $margin;\r\n  }\r\n}",".subtitle {\r\n    color: $main-font-color;\r\n    @include sansus();\r\n    @include font-size(1.75); //35\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n    padding: .5em 1.333em;\r\n    display: inline-block;\r\n    position: relative;\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    @include adaptive(smart) {\r\n        @include font-size(1.6);\r\n    }\r\n\r\n    $margin: .667em;\r\n\r\n    &:after, &:before {\r\n        content:\"\";\r\n        display: block;\r\n        @include centered('y');\r\n        background-color: rgba($main-font-color, 0.3);\r\n        width: 0.367em;\r\n        height: 0.083em;\r\n    }\r\n    &:after {\r\n        right: $margin;\r\n    }\r\n    &:before {\r\n        left: $margin;\r\n    }\r\n}",".user {\r\n    color: $white;\r\n    &__photo {\r\n        margin-bottom: 10px;\r\n    }\r\n    &__name {\r\n        @include font-size(1.75);\r\n        line-height: 1;\r\n        font-weight: 500;\r\n        margin-bottom: 10px;\r\n    }\r\n    &__description {\r\n        line-height: 1;\r\n        font-weight: 400;\r\n    }\r\n}",".hamburger {\r\n    color: rgba($white, .8);\r\n    position: absolute;\r\n    top: 2.063em;\r\n    right: 1.875em;\r\n    &:active,\r\n         :hover {\r\n            color: rgba(255,255,255,1);\r\n         }\r\n}\r\n\r\n.icon {\r\n    &-hamburger {\r\n        font-size: 35px;\r\n    }\r\n}",".user-about {\r\n    @include centered('x');\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    margin-bottom: 30px;\r\n    &__picture {\r\n        display: flex;\r\n        justify-content: center;\r\n        max-height: 390px;\r\n        overflow: hidden;\r\n        margin-bottom: 40px;\r\n    }\r\n    &__photo-img {\r\n        display: block;\r\n        width: 445px;\r\n        height: 460px;\r\n    }\r\n    &__title {\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    &__text {\r\n        margin: 0 auto;\r\n        max-width: 445px;\r\n    }\r\n}",".about-user-info {\r\n    &__title {\r\n        text-align: center;\r\n        width: 350px;\r\n        margin: 0 auto;\r\n    }\r\n    &__text {\r\n        margin-top: 40px;\r\n    }\r\n    &__content {\r\n        \r\n    }\r\n}",".about-data {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    &__description {\r\n        margin-bottom: 40px;\r\n        width: 90%;\r\n    }\r\n    &__content {\r\n        width: 90%;\r\n    }\r\n}\r\n",".skills {\r\n\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    &__item {\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n}",".skill-section {\r\n    &__list {\r\n        margin-left: -35px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n    }\r\n    &__item {\r\n        margin-top: 20px;\r\n        margin-left: 35px;\r\n        position: relative;\r\n        width: 110px;\r\n        height: 110px;\r\n    }\r\n    &__title {\r\n        @include font-size(1.4);\r\n        font-weight: 500;\r\n        line-height: 1;\r\n    }\r\n}",".skill {\r\n    &__circle {\r\n        position: relative;\r\n    }\r\n    &__name {\r\n        position: absolute;\r\n        @include centered('both');\r\n    }\r\n    &__layer {\r\n        fill: none;\r\n        stroke: $green;\r\n        stroke-width: 19;\r\n    }\r\n    &__sector {\r\n        transform-origin: center;\r\n        transform: rotate(-90deg);\r\n        transition: all 1s;\r\n        fill: none;\r\n        stroke: $white;\r\n        stroke-dasharray: 20 301;\r\n        stroke-width: 21;\r\n    }\r\n\r\n}",".quote {\r\n    font-style: italic;\r\n    padding: 0;\r\n    margin: 0;\r\n    &_style_bold {\r\n        font-weight: 500;\r\n    }\r\n}",".navigation{\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    &__item {\r\n        margin-right: 20px;\r\n        &:last-child() {\r\n            margin-right: 0px;\r\n        }\r\n    }\r\n    &__link {\r\n        color: $white;\r\n        font-weight: 400;\r\n        text-decoration: none;\r\n        & :active,\r\n        :hover {\r\n            color: $white;\r\n        }\r\n    }\r\n}",".contacts {\r\n    padding: 10px 40px 35px 35px;\r\n    text-align: center;    \r\n    background-color: rgba($white, .85);\r\n    width: 380px;\r\n    height: 310px;\r\n    border-radius: 10px;\r\n    &__title {\r\n        margin-bottom: 20px;\r\n    }\r\n    &__item {\r\n        position: relative;\r\n        margin: 20px 0;\r\n    }\r\n    &__text {\r\n        font-weight: 500;\r\n        padding-left: 35px;        \r\n        text-align: left;        \r\n    }\r\n    &__icon {\r\n        color: $green;\r\n        position: absolute;\r\n        top: 1px;\r\n        left: 0;\r\n        width: 30px;\r\n        height: 30px;        \r\n    }\r\n}\r\n\r\n.icon {    \r\n    &-skype {\r\n        font-size: 25px;\r\n    }\r\n    &-envelope {\r\n        font-size: 20px;\r\n    }\r\n    &-phone {\r\n        font-size: 20px;\r\n    }\r\n    &-map_marker {\r\n        font-size: 21px;\r\n    }\r\n}",".hero {\r\n  height: 600px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  &__img-bg{\r\n    width: 100%;\r\n    min-height: 880px;\r\n    min-width: 1800px;\r\n  }\r\n  &__socials{\r\n    position: absolute;\r\n    top: 2.063em;\r\n    left: 1.875em;\r\n  }\r\n  &__title{\r\n    @include centered('y');\r\n    top: 45%;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n  &__user-block{\r\n    @include centered('both');\r\n  }\r\n}",".section-title {\r\n  display: inline-block;\r\n}",".down-arrow {\r\n  @include centered('x');\r\n  bottom: 60px;\r\n  font-size: 18px;\r\n  color: rgba(255,255,255,.8);\r\n  transition: all .5s ease-in-out;\r\n  z-index: 1;\r\n  &:active,\r\n    :hover {\r\n      color: rgba(255,255,255,1);\r\n    }\r\n}\r\n\r\n.icon {\r\n  &-arrow_down {\r\n      font-size: 18px;\r\n  }\r\n}",".about {\r\n  @include sgs-change('debug', true);\r\n  @include background-grid($color: blue);\r\n  @include add-gutter-style('fixed');\r\n  background: $white;\r\n  @extend %clearfix;\r\n  &__left {\r\n    position: relative;\r\n    // float: left;\r\n    // width: 50%;\r\n    @include grid-span(6, 1);\r\n  }\r\n\r\n  &__right{\r\n    position: relative;\r\n    @include grid-span(6, 7);\r\n  }\r\n\r\n  &__left {\r\n    background: $white;\r\n\r\n  }\r\n\r\n  &__section-title {\r\n    @include centered('x');\r\n    position: relative;\r\n    top: -35px;\r\n  }\r\n\r\n  &__right {\r\n    background: $beige;\r\n  }\r\n\r\n  &__triangles{\r\n    position: absolute;\r\n    bottom: 100%;\r\n  }\r\n}","// -----------------------------------------------\n// Grid Background\n\n@mixin background-grid(\n  $columns: null,\n  $gutter: null,\n  $gutter-style: null,\n  $color: null\n) {\n\n  $color: if($color != null, $color, sgs-get('background grid color'));\n\n  @if sgs-get('debug') != false {\n    $columns: if($columns != null, $columns, sgs-get('grids'));\n    $gutter: if($gutter != null, $gutter, sgs-get('gutters'));\n    $gutter-style: if($gutter-style != null, $gutter-style, sgs-get('gutter styles'));\n\n    @include background-build($columns, $gutter, $gutter-style, $color)\n  }\n}\n\n@function background-map($columns, $gutters, $gutter-styles) {\n  $Grids: ();\n  $Gutters: ();\n  $Styles: ();\n\n  @if $columns and type-of($columns) != 'map' {\n    $Grids: (-1px: $columns);\n  }\n  @else {\n    $Grids: sgs-get('grids');\n  }\n\n  @if $gutters and type-of($gutters) != 'map' {\n    $Gutters: (-1px: $gutters);\n  }\n  @else {\n    $Gutters: sgs-get('gutters');\n  }\n\n  @if $gutter-styles and type-of($gutter-styles) != 'map' {\n    $Styles: (-1px: $gutter-styles);\n  }\n  @else {\n    $Styles: sgs-get('gutter styles');\n  }\n\n  // Build 1st Depth Map\n  $Holder: ();\n\n  // Grids\n  @each $k, $v in $Grids {\n    $Holder: map-merge($Holder, ($k: ('grid': $v)));\n  }\n  // Gutters\n  @each $k, $v in $Gutters {\n    $Grid: map-get($Holder, $k);\n\n    $Map: ('gutter': $v);\n    @if $Grid != null {\n      $Grid: map-get($Grid, 'grid');\n      @if $Grid != null {\n        $Map: map-merge($Map, ('grid': $Grid));\n      }\n    }\n\n    $Holder: map-merge($Holder, ($k: $Map));\n  }\n  // Style\n  @each $k, $v in $Styles {\n    $Grid: map-get($Holder, $k);\n    $Gutter: map-get($Holder, $k);\n\n    $Map: ('style': $v);\n    @if $Grid != null {\n      $Grid: map-get($Grid, 'grid');\n      @if $Grid != null {\n        $Map: map-merge($Map, ('grid': $Grid));\n      }\n    }\n    @if $Gutter != null {\n      $Gutter: map-get($Gutter, 'gutter');\n      @if $Gutter != null {\n        $Map: map-merge($Map, ('gutter': $Gutter));\n      }\n    }\n\n    $Holder: map-merge($Holder, ($k: $Map));\n  }\n\n  $Holder: sort-map($Holder);\n  $Return: ();\n\n  // Build full stack for each breakpoint\n  @for $i from 1 through length($Holder) {\n    $Key: nth(nth($Holder, $i), 1);\n    $Value: nth(nth($Holder, $i), 2);\n\n    $Previous: ();\n    @if $i > 1 {\n      $Previous: nth(nth($Return, $i - 1), 2);\n    }\n\n    @if not map-has-key($Value, 'grid') {\n      $Sort-Grid: map-get($Previous, 'grid');\n      $Value: map-merge($Value, ('grid': $Sort-Grid));\n    }\n\n    @if not map-has-key($Value, 'gutter') {\n      $Sort-Gutter: map-get($Previous, 'gutter');\n      $Value: map-merge($Value, ('gutter': $Sort-Gutter));\n    }\n\n    @if not map-has-key($Value, 'style') {\n      $Sort-Style: map-get($Previous, 'style');\n      $Value: map-merge($Value, ('style': $Sort-Style));\n    }\n\n    $Return: map-merge($Return, ($Key: $Value));\n  }\n\n  @return $Return;\n}\n\n@mixin background-build($columns, $gutters, $gutter-styles, $color) {\n  $Background-Map: background-map($columns, $gutters, $gutter-styles);\n  $Display: true;\n\n  $Column-Color: $color;\n  $Inverse-Column-Color: mix(black, $color, 15%);\n  $Gutter-Color: mix(white, $color, 25%);\n  $Direction: named-direction(sgs-get('direction'));\n\n  $encodeMap:(\n    '%\"':'%25%22',\n    '<':'%3C',\n    ' ':'%20',\n    '=':'%3D',\n    '\\\"':'%22',\n    ':':'%3A',\n    '/':'%2F',\n    '.':'%2E',\n    '>':'%3E',\n    '#':'%23',\n    '-':'%2D'\n  );\n\n  @each $bkpt, $def in $Background-Map {\n    $Grid: map-get($def, 'grid');\n    $Gutter: map-get($def, 'gutter');\n    $Style: map-get($def, 'style');\n\n    $Grid-Count: column-count($Grid);\n\n    $SVG: '<svg xmlns=\"http://www.w3.org/2000/svg\">';\n\n    $Gutter-Width: gutter-span($Gutter, $Grid, $Style);\n    @if unit($Gutter-Width) != '%' and unit($Gutter-Width) != '' {\n      $Gutter-Width: 0%;\n    }\n\n    @if $Style == 'fixed' {\n      $Gutter-Width: 0%;\n    }\n    $Counter-Width: 0%;\n    $holder: ();\n\n    @for $i from 1 through $Grid-Count {\n      $Holder-Gradient: ();\n      $Loop-Width: column-span(1, $i, $Grid, $Gutter, $Style);\n\n      @if index($Style, 'split') and $i == 1 {\n        $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Gutter-Color}\" width=\"#{$Gutter-Width / 2}\" height=\"100%\"/>';\n        $Counter-Width: ($Gutter-Width / 2);\n      }\n\n      $Loop-Color: $Column-Color;\n      @if (index($Style, 'fixed') or $Gutter-Width == 0%) and ($i % 2 == 0 ) {\n        $Loop-Color: $Inverse-Column-Color;\n      }\n\n      @if $i != $Grid-Count {\n        @if unit($Counter-Width) == unit($Loop-Width) {\n          $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Loop-Color}\" width=\"#{$Loop-Width}\" height=\"100%\"/>';\n          $Counter-Width: $Counter-Width + $Loop-Width;\n          $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Gutter-Color}\" width=\"#{$Gutter-Width}\" height=\"100%\"/>';\n          $Counter-Width: $Counter-Width + $Gutter-Width;\n        }\n        @else {\n          $Display: false;\n        }\n\n      }\n      @else if $i == 1 {\n        @if unit($Counter-Width) == unit($Loop-Width) {\n          $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Loop-Color}\" width=\"#{$Loop-Width}\" height=\"100%\"/>';\n          $SVG: $SVG + '<rect x=\"#{$Loop-Width}\" fill=\"#{$Gutter-Color}\" width=\"#{$Gutter-Width}\" height=\"100%\"/>';\n          $Counter-Width: $Counter-Width + $Loop-Width + $Gutter-Width;\n        }\n        @else {\n          $Display: false;\n        }\n\n      }\n      @else if $i == $Grid-Count and index($Style, 'split') {\n        @if unit($Counter-Width) == unit($Loop-Width) {\n          $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Loop-Color}\" width=\"#{$Loop-Width}\" height=\"100%\"/>';\n          $Counter-Width: $Counter-Width + $Loop-Width;\n          $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Gutter-Color}\" width=\"#{$Gutter-Width / 2}\" height=\"100%\"/>';\n        }\n        @else {\n          $Display: false;\n        }\n      }\n      @else {\n        $SVG: $SVG + '<rect x=\"#{$Counter-Width}\" fill=\"#{$Loop-Color}\" width=\"#{$Loop-Width}\" height=\"100%\"/>';\n      }\n    }\n\n    $SVG: $SVG + '</svg>';\n\n    @each $char, $code in $encodeMap {\n      $index: str-index($SVG, $char);\n      @while $index {\n        $index: str-index($SVG, $char);\n        $SVG: str-slice($SVG, 1, $index - 1) + $code + str-slice($SVG, $index + str-length($char));\n        $index: str-index($SVG, $char);\n      }\n    }\n\n    @if $Display {\n\n      @if $bkpt != -1px {\n        @include breakpoint($bkpt) {\n          background-image: url('data:image/svg+xml,' + $SVG);\n        }\n      }\n      @else {\n        background-image: url('data:image/svg+xml,' + $SVG);\n      }\n    }\n    @else {\n      @warn 'Cannot generate a Background Grid for grid `#{$Grid}` with gutters `#{$Gutter}` and gutter style `#{$Style}`';\n    }\n  }\n}\n","@import \"api/float\";\n@import \"api/isolation\";\n@import \"api/calc\";\n\n//////////////////////////////\n// Master Grid Span mixin\n//////////////////////////////\n@mixin grid-span($span, $location: 1, $grid: null, $gutter: null, $output-style: null, $gutter-style: null, $options: null) {\n\n  @if $output-style == null {\n    $output-style: sgs-get('output');\n  }\n\n  $Grid: find-grid($grid);\n  $Gutter: find-gutter($gutter);\n  $Style: find-gutter-style($gutter-style);\n\n  $Start-Row: start-row($location);\n  $End-Row: end-row($span, $location, $Grid);\n\n  $Fixed-Gutter: fixed-gutter($Grid, $Gutter, $Style);\n  $Split-Gutter: index($Style, 'split');\n  $Gutter-Property: gutter-property($Grid, $Gutter, $Style);\n\n  $Direction: sgs-get('direction');\n  $From: if($options and type-of($options) == 'map', if(map-get($options, 'from'), map-get($options, 'from'), $Direction), $Direction);\n  $From: if($From == 'ltr' or $From == 'rtl', named-direction($From), $From);\n\n  $Holder: ();\n  @each $k, $v in $options {\n    $Holder: if($k == 'from', $Holder, map-merge($Holder, ($k: $v)));\n  }\n  $options: if(length($Holder) > 0, $Holder, null);\n\n  $Span-Map: (\n    'span': $span,\n    'location': $location,\n    'grid': $Grid,\n    'gutter': $Gutter,\n    'style': $Style,\n    'start row': $Start-Row,\n    'end row': $End-Row,\n    'fixed gutter': $Fixed-Gutter,\n    'split gutter': $Split-Gutter,\n    'gutter property': $Gutter-Property,\n    'options': $options\n  );\n\n  @if sgs-get('debug') != false {\n    -sgs-span-settings: inspect($Span-Map);\n  }\n\n\n  @if function-exists('output-#{$output-style}') {\n    $Left: ();\n    $Right: ();\n\n    @if $Direction == 'both' or $From == 'left' or ($Direction == 'rtl' and $From == 'opposite') {\n      $Left: call('output-#{$output-style}', map-merge($Span-Map, ('direction': left)));\n    }\n\n    @if $Direction == 'both' or $From == 'right' or ($Direction == 'ltr' and $From == 'opposite') {\n      $Right: call('output-#{$output-style}', map-merge($Span-Map, ('direction': right)));\n    }\n\n    $Left-Keys: map-keys($Left);\n    $Right-Keys: map-keys($Right);\n    $Exclude: ();\n\n    @each $key in $Left-Keys {\n      @if index($Right-Keys, $key) {\n        @if map-get($Right, $key) == map-get($Left, $key) {\n          $Exclude: append($Exclude, $key);\n        }\n      }\n    }\n\n    // Always try and print the Left value\n    @include grid-span-build-exclude($Left, $Exclude, false);\n\n    // If Direction is Both or RTL, add the RTL attribute selector\n    @if $Direction == 'both' or $Direction == 'rtl' {\n      [dir=\"rtl\"] & {\n        @include grid-span-build-exclude($Right, $Exclude, true);\n      }\n    }\n    @else {\n      @include grid-span-build-exclude($Right, $Exclude, true);\n    }\n  }\n  @else {\n    @warn \"There doesn't appear to be an output style named `#{$output-style}`. Please ensure that the function `output-#{$output-style}` and that the output style `#{$output-style}` are both available before trying to use them.\";\n  }\n}\n\n@mixin grid-span-build($property, $value) {\n  @if type-of($value) != 'map' {\n    #{$property}: $value;\n  }\n  @else {\n    @each $prefix, $val in $value {\n      #{$property}: $val;\n    }\n  }\n}\n\n@mixin grid-span-build-exclude($properties, $delta, $exclude: false) {\n  @each $property, $value in $properties {\n    @if $exclude {\n      @if not index($delta, $property) {\n        @include grid-span-build($property, $value);\n      }\n    }\n    @else {\n      @include grid-span-build($property, $value);\n    }\n  }\n}","//////////////////////////////\n// Find width, in percentages, of the column span\n//////////////////////////////\n@function column-span($span, $location, $grid: null, $gutter: null, $gutter-style: null) {\n  // Find the grid and gutters\n  $grid: find-grid($grid);\n  $gutter: find-gutter($gutter);\n  $gutter-style: find-gutter-style($gutter-style);\n\n  @if fixed-gutter($grid, $gutter, $gutter-style) {\n    $gutter: 0;\n  }\n\n  // @debug $grid;\n  // @debug $gutter;\n\n  // Combine the grid and gutters\n  $grid-and-gutters: column-sum($grid, $gutter, $gutter-style);\n\n  // @debug $grid-and-gutters;\n\n  // Equal width grid are easy! Deal with them!\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    $span-and-gutters: $span + $gutter * ($span - 1);\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  // Asymmetric lists are harder, so we're going to treat them as their own grid\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $span-and-gutters: 0;\n\n    @if $location == 1 and $span >= 1 {\n      @for $i from 1 through $span {\n        $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n      }\n    }\n    @else {\n      $total: $location + $span - 1;\n      @if $total != 0 {\n        @for $i from $location through $total {\n          $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n        }\n      }\n    }\n    $span-and-gutters: $span-and-gutters - $gutter;\n\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  @else {\n    @warn \"Can't find a working set of grid! That's terrible!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find the total sum of the grid\n//////////////////////////////\n@function column-sum($grid, $gutter, $gutter-style) {\n  $split: if(index($gutter-style, 'split'), true, false);\n\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    @if $split {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1))) * nth($gutter, 1));\n    }\n    @else {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1)) - 1) * nth($gutter, 1));\n    }\n\n  }\n  @else if type-of($grid) == 'list' {\n    $sum: 0;\n    @each $column in $grid {\n      $sum: $sum + nth($column, 1);\n    }\n    @if $split {\n      $sum: $sum + (column-count($grid)) * nth($gutter, 1);\n    }\n    @else {\n      $sum: $sum + (column-count($grid) - 1) * nth($gutter, 1);\n    }\n    @return $sum;\n  }\n}\n\n//////////////////////////////\n// Find the number of grid\n//////////////////////////////\n@function column-count($grid) {\n  @if type-of($grid) == 'number' {\n    @return $grid;\n  }\n  @if type-of($grid) == 'list' {\n    @if length($grid) == 1 {\n      @return nth($grid, 1);\n    }\n    @else {\n      @return length($grid);\n    }\n  }\n}","@function output-isolation($Span-Map) {\n  // Set up Left/Right maps\n  $Return: ();\n\n  $Span: map-get($Span-Map, 'span');\n  $Location: map-get($Span-Map, 'location');\n\n  $Grid: map-get($Span-Map, 'grid');\n  $Gutter: map-get($Span-Map, 'gutter');\n  $Style: map-get($Span-Map, 'style');\n\n  $Start-Row: map-get($Span-Map, 'start row');\n  $End-Row: map-get($Span-Map, 'end row');\n\n  $Fixed-Gutter: map-get($Span-Map, 'fixed gutter');\n  $Split-Gutter: map-get($Span-Map, 'split gutter');\n  $Gutter-Property: map-get($Span-Map, 'gutter property');\n\n  $Direction: map-get($Span-Map, 'direction');\n  $Options: map-get($Span-Map, 'options');\n\n  $Width: column-span($Span, $Location, $Grid, $Gutter, $Style);\n  $Margin-Span: column-span(($Location - 1), 1, $Grid, $Gutter, $Style);\n  $Gutter-Span: gutter-span($Gutter, $Grid);\n\n  // Backwards Compatibility for Options\n  @if type-of($Options) != 'map' and $Options != null {\n    $Options: ('clear': unquote(nth($Options, 1)));\n  }\n\n  $Dir: $Direction;\n  $Opp: opposite-direction($Dir);\n\n  $Return: map-merge($Return, ('width': $Width));\n\n  @if ($End-Row) {\n    $Return: map-merge($Return, ('float': $Opp));\n    $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n\n    @if $Split-Gutter and not $Fixed-Gutter {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      $Return: map-merge($Return, ('margin-#{$Opp}': 0));\n    }\n  }\n  @else {\n    $Return: map-merge($Return, ('float': $Dir));\n    $Return: map-merge($Return, ('margin-#{$Opp}': -100%));\n\n    @if $Start-Row {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n      }\n    }\n    @else {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span + $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span));\n      }\n    }\n  }\n  // If options are set, we merge them in!\n  @if ($Options) {\n    $Return: map-merge($Return, $Options);\n  }\n\n  // If CLear isn't already available, set it!\n  @if not map-has-key($Return, 'clear') {\n    $Return: map-merge($Return, ('clear': none));\n  }\n\n  // Left Fixed Gutters\n  @if $Fixed-Gutter {\n    @if index($Style, 'split') {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Dir}': $Gutter-Span / 2));\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      @if not $End-Row {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': 0));\n      }\n    }\n  }\n\n  @return $Return;\n}\n\n//////////////////////////////\n// Happy Syntax for Isolation\n//\n// Makes working with Isolation easier, as it moves Clear to a 1st class citizen of the mixin, and automatically builds the verbose grid-span mixin call\n//////////////////////////////\n@mixin isolation-span($Span, $Location, $clear: false, $grid: false, $gutter: false, $gutter-style: false, $from: false) {\n  $Options: ();\n  @if $clear {\n    $Options: map-merge($Options, ('clear': unquote($clear)));\n  }\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n\n  $Options: if(length($Options) > 0, $Options, null);\n  @include grid-span($Span, $Location, $grid, $gutter, 'isolation', $gutter-style, $Options);\n}\n\n//////////////////////////////\n// Happy Syntax of Asymmetric Grids\n//\n// Makes working with asymmetric grids easier!\n//////////////////////////////\n@mixin asymmetric-span($Location, $Span: false, $grid: false, $gutter: false, $gutter-style: false, $from: false, $output-style: false) {\n\n  $Span: if($Span != false, $Span, 1);\n  $output-style: if($output-style != false, $output-style, sgs-get('asymmetric output'));\n\n  $Options: ();\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n  $Options: if(length($Options) > 0, $Options, null);\n\n  @include grid-span($Span, $Location, $grid, $gutter, $output-style, $gutter-style, $Options);\n}","//////////////////////////////\n// Find Opposite Direction\n//////////////////////////////\n@function opposite-direction($dir) {\n  @if $dir == 'left' {\n    @return right;\n  }\n  @else if  $dir == 'right' {\n    @return left;\n  }\n  @else if $dir == 'ltr' {\n    @return rtl;\n  }\n  @else if $dir == 'rtl' {\n    @return ltr;\n  }\n  @else if $dir == 'top' {\n    @return bottom;\n  }\n  @else if $dir == 'bottom' {\n    @return top;\n  }\n  @else {\n    @warn \"#{$dir} is not a direction! Make sure your direction is all lowercase!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find Direction Name\n//////////////////////////////\n@function named-direction($dir) {\n  @if $dir == 'ltr' {\n    @return left;\n  }\n  @else if $dir == 'rtl' {\n    @return right;\n  }\n  @else {\n    @warn \"#{$dir} is not a valid HTML direction! Make sure you are using a valid HTML direction\";\n    @return false;\n  }\n}","[class*=\"ymaps-2\"][class*=\"-ground-pane\"] {\r\n    // filter: hue-rotate(109deg);\r\n}\r\n\r\n.map {\r\n    position: relative;\r\n    &__contacts {\r\n        z-index: 999;\r\n        position: absolute;\r\n        top: 39%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n    &__box{\r\n        height: 960px;\r\n    }\r\n}",".footer {\r\n    position: absolute;\r\n    bottom: 0;\r\n    color: $gray;\r\n    font-weight: 300;\r\n    &__top {\r\n        min-height: 150px;\r\n        display: flex;\r\n        justify-content: center;\r\n        background-color: rgba($black, .85);\r\n    }\r\n    &__block {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        position: relative;\r\n        padding: 28px 28px;\r\n        width: 33.33%;\r\n        &:nth-child(2):after {\r\n            position: absolute;\r\n            top: 25px;\r\n            left: 0;\r\n            content: \"\";\r\n            display: block;\r\n            width: 1px;\r\n            height: 100px;\r\n            background-color: rgba($gray, .85);\r\n        }\r\n        &:nth-child(2):before {\r\n            position: absolute;\r\n            top: 25px;\r\n            right: 0;\r\n            content: \"\";\r\n            display: block;\r\n            width: 1px;\r\n            height: 100px;\r\n            background-color: rgba($gray, .85);\r\n        }\r\n    }\r\n    &__socials {\r\n        color: $gray;\r\n        margin-top: 25px;\r\n    }\r\n    &__bottom {\r\n        color: $white;\r\n        display: flex;\r\n        line-height: 1;\r\n        padding: 10px 0;\r\n        justify-content: center;\r\n        background-color: rgba($green, .85);\r\n    }\r\n}"]}